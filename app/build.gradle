apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
        pickFirst 'publicsuffixes.gz'
    }

    defaultConfig {
        applicationId "com.tradr"

        versionCode 1
        versionName "1.0"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    dexOptions {
        preDexLibraries rootProject.preDexLibraries

        // required for test to build
        javaMaxHeapSize "2g"

        // Makes string ids up to 2^32 instead of 2^16 (does not affect method limit)
        jumboMode = true
    }

    lintOptions {
        abortOnError false // TEMPORARY until we can fix all lint errors
    }

    dataBinding {
        enabled = true
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        // Android support libraries
        implementation "com.android.support:appcompat-v7:${rootProject.supportLibraryVersion}"
        implementation "com.android.support:support-v13:${rootProject.supportLibraryVersion}"
        implementation "com.android.support:support-annotations:${rootProject.supportLibraryVersion}"
        implementation 'com.android.support.constraint:constraint-layout:1.1.2'

        // Retrofit
        implementation 'com.squareup.retrofit2:retrofit:2.3.0'
        implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
        implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'

        // Reactive Extensions
        implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
        implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
        implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

        // Logging
        implementation 'com.jakewharton.timber:timber:4.5.1'

        // Dependency Injection
        implementation 'com.google.dagger:dagger:2.16'
        kapt 'com.google.dagger:dagger-compiler:2.16'
        kapt 'javax.annotation:jsr250-api:1.0'

        // Databinding
        kapt 'com.android.databinding:compiler:3.1.3'
    }
}
